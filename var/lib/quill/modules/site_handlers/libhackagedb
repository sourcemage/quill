#!/bin/bash
#---
## Haskell HackageDB module
#---


#---
## @param package
## @param package page
## @param cabal file
## @Globals none
#---
function quill_hdb_get_files(){
  local package
  local package_page
  local cabal_file
  local cabal_file_path

  package="$1"
  package_page="$2"
  cabal_file="$3"

  if [[ ! -e "$package_page" ]] ; then
    message "Attempting to retrieve package page..."
    wget -q -O "$package_page" \
         "http://hackage.haskell.org/package/$package" || \
         { error_msg "Error: unable to fetch package page";
           return 1; }
  else
    message "Using cached package page..."
  fi
  if [[ ! -e "$cabal_file" ]] ; then
    cabal_file_path=$(egrep -o "/package/$package-[^/]+/$package\.cabal" "$package_page")
    message "Attempting to retrieve cabal file..."
    wget -q -O "$cabal_file.tmp" \
         "http://hackage.haskell.org$cabal_file_path" || \
         { error_msg "Error: unable to fetch cabal file";
           return 1; }
    tr '\t' ' ' < "$cabal_file.tmp" > "$cabal_file"
    rm "$cabal_file.tmp"
  else
    message "Using cached cabal file..."
  fi
}

#---
## @param info
## @param file
## @Globals none
#---
function quill_hdb_get_info(){
  local info
  local package_page
  local cabal_file
  local desc_here
  local possible_line

  info="$1"
  file="$2"

  if [[ "$info" == "src" ]] ; then
    echo "http://hackage.haskell.org$(egrep -o "/packages/$package-[^/]+/$package-.+\.tar.gz" "$file")"
  elif [[ "$info" == "description" ]] ; then
    awk '
      !/^description:/ { next }
      {
        sub(/[^:]*: */, "")
        do if ($0) print; while (getline && !/^[-a-z]+:/)
        exit
      }
    '
  elif [[ "$info" == "build-depends" ]] ; then
    sed -r -e '
      /build-depends:/!d
      s/[^:]*: *//
      s/[><=]+[0-9.]+//g
      s/,//g
      s/^base +| +base +| +base$/ /
      s/^unix +| +unix +| +unix$/ /
    '
  else
    sed -e "/$info:/!d;s/[^:]*: *//"
  fi < "$file"
}

#---
## @param spell name
## @param package
## @Globals SPELL_NAME QUILL_TMP_DIR SPELL_LICENSE
## @Globals SPELL_SHORT_DESCRIPTION SPELL_DESC_NAME
## @Globals SPELL_URL SPELL_SRC_URL SPELL_DEPENDENCIES
#---
function quill_hdb_core(){
  local package
  local package_page
  local cabal_file

  SPELL_NAME="$1"
  package="$2"

  package_page="$QUILL_TMP_DIR/$package.hdb"
  cabal_file="$QUILL_TMP_DIR/$package.cabal"
  quill_hdb_get_files "$package" "$package_page" "$cabal_file" || return 1
  SPELL_LICENSE="$(quill_hdb_get_info  "license" "$cabal_file")"
  SPELL_SHORT_DESCRIPTION="$(quill_hdb_get_info  "synopsis" "$cabal_file")"
  SPELL_DESC_NAME=${SPELL_NAME}.desc
  quill_hdb_get_info "description" "$cabal_file" > "$QUILL_TMP_DIR/$SPELL_DESC_NAME"
  SPELL_URL="$(quill_hdb_get_info  "homepage" "$cabal_file")"
  SPELL_SRC_URL="$(quill_hdb_get_info "src" "$package_page")"
  SPELL_DEPENDENCIES="ghc "$(quill_hdb_get_info "build-depends" "$cabal_file")
}
