#!/bin/bash
#---
## Haskell HackageDB module
#---


#---
## @param package
## @param package page
## @param cabal file
## @Globals none
#---
function quill_hdb_get_files(){
  local package
  local package_page
  local cabal_file
  local cabal_file_path

  package="$1"
  package_page="$2"
  cabal_file="$3"

  if [[ ! -e "$package_page" ]] ; then
    message "Attempting to retrieve package page..."
    wget -q -O "$package_page" \
         "http://hackage.haskell.org/package/$package" || \
         { error_msg "Error: unable to fetch package page";
           return 1; }
  else
    message "Using cached package page..."
  fi
  if [[ ! -e "$cabal_file" ]] ; then
    cabal_file_path=$(egrep -o "/package/$package-[^/]+/$package\.cabal" "$package_page")
    message "Attempting to retrieve cabal file..."
    wget -q -O "$cabal_file.tmp" \
         "http://hackage.haskell.org$cabal_file_path" || \
         { error_msg "Error: unable to fetch cabal file";
           return 1; }
    tr '\t' ' ' < "$cabal_file.tmp" > "$cabal_file"
    rm "$cabal_file.tmp"
  else
    message "Using cached cabal file..."
  fi
}

#---
## @param info
## @param file
## @Globals none
#---
function quill_hdb_get_info(){
  local info
  local package_page
  local cabal_file
  local desc_here
  local possible_line

  info="$1"
  file="$2"
  case "$info" in
    src)
      awk '
        /^[Nn][Aa][Mm][Ee]:/ { n = $2 }
        /^[Vv][Ee][Rr][Ss][Ii][Oo][Nn]:/ { n = n "-" $2; exit }
        END {
          printf "http://hackage.haskell.org/package/%s/%s.tar.gz\n", n, n
        }
      '
      ;;
    description)
      awk '
        !/^[Dd][Ee][Ss][Cc][Rr][Ii][Pp][Tt][Ii][Oo][Nn]:/ { next }
        {
          sub(/^[^:]*:/, "")
          do {
            if ($0) {
              if (NF == 1 && $1 == ".") {
                print ""
              } else {
                gsub("^[\t ]*", "")
                print
              }
            }
          } while (getline && !/^[-A-Za-z]+:/ && $0)
          exit
        }
      '
      ;;
    build-depends)
      awk '
        BEGIN {
          # Packages included in GHC
          discard["*"]
          discard["Cabal"]
          discard["Win32"]
          discard["array"]
          discard["base"]
          discard["binary"]
          discard["bytestring"]
          discard["containers"]
          discard["deepseq"]
          discard["directory"]
          discard["filepath"]
          discard["ghc-prim"]
          discard["haskeline"]
          discard["hoopl"]
          discard["hpc"]
          discard["integer-gmp"]
          discard["pretty"]
          discard["process"]
          discard["template-haskell"]
          discard["terminfo"]
          discard["time"]
          discard["transformers"]
          discard["unix"]
          discard["xhtml"]
        }
        /^[Nn][Aa][Mm][Ee]:/ { discard[$2] }
        tolower($1) !~ /build-depends:/ { next }
        {
          $1 = ""
          do {
	    gsub(/,|&&|[><=]+ *[0-9.]+/, " ")
            for (i = 1; i <= NF; i++)
              if ($i && !($i in discard))
                dep[$i]
          } while (getline && $1 !~ /^[-A-Za-z]+:$/ && $1)
        }
        END {
          for (i in dep)
            printf " haskell-%s", tolower(i)
        }
      '
      ;;
    *)
      awk -vr="^$info:" 'tolower($0) ~ r { sub(/[^:]*:[\t ]*/, ""); print; exit }'
      ;;
  esac < "$file"
}

#---
## @param spell name
## @param package
## @Globals SPELL_NAME QUILL_TMP_DIR SPELL_LICENSE
## @Globals SPELL_SHORT_DESCRIPTION SPELL_DESC_NAME
## @Globals SPELL_URL SPELL_SRC_URL SPELL_DEPENDENCIES
#---
function quill_hdb_core(){
  local package
  local package_page
  local cabal_file

  SPELL_NAME="haskell-$1"
  package="$2"

  package_page="$QUILL_TMP_DIR/$package.hdb"
  cabal_file="$QUILL_TMP_DIR/$package.cabal"
  quill_hdb_get_files "$package" "$package_page" "$cabal_file" || return 1
  SPELL_LICENSE="$(quill_hdb_get_info  "license" "$cabal_file")"
  SPELL_SHORT_DESCRIPTION="$(quill_hdb_get_info  "synopsis" "$cabal_file")"
  SPELL_DESC_NAME=${SPELL_NAME}.desc
  quill_hdb_get_info "description" "$cabal_file" > "$QUILL_TMP_DIR/$SPELL_DESC_NAME"
  SPELL_URL="$(quill_hdb_get_info  "homepage" "$cabal_file")"
  SPELL_SRC_URL="$(quill_hdb_get_info "src" "$cabal_file")"
  SPELL_DEPENDENCIES="ghc$(quill_hdb_get_info "build-depends" "$cabal_file")"
}
