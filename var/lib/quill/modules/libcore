#---
## @Synopsis query_list function from init-manager
## $1 - the question
## $2 - the VARIABLE to which to store the answer
## $3 - the default answer
## $4...$n - the options for the list
#---
function query_list()
{
  local question="$1"
  shift
  query_msg "$question"
  select_list "$@"
}

#---
## @Synopsis generate basic spell dir
#---
function create_spell_base(){
  mkdir -p ${QUILL_SPELL_DIR}/${SPELL_NAME}
  cd ${QUILL_SPELL_DIR}/${SPELL_NAME}
  touch DETAILS
  chmod +x DETAILS
  DEPENDSISON=""
  CONFLICTSON=""
}

#---
## @Synopsis download spell's source file
#---

function get_spell_source(){
  mkdir -p ${QUILL_TMP_DIR}
  cd ${QUILL_TMP_DIR}
  if [[ -e $SPELL_SRC_FILE ]]; then
    message "Found the spell tarball in the quill dir, continuing ..."
  elif [[ -e $SOURCE_CACHE/$SPELL_SRC_FILE ]]; then
    message "Found the spell tarball in the sorcery cache, copying it over ..."
    cp $SOURCE_CACHE/$SPELL_SRC_FILE .
    message "Done."
  else
    wget -c "${SPELL_SRC_URL}"
  fi
  cd ${QUILL_SPELL_DIR}/${SPELL_NAME}
}

#---
## @Synopsis Print the sha512 hash, a simplified gpg_hashsum
##
#---

function quill_hash_get() {
  gpg --print-md sha512 "$@" | tr -d '\n ' | tr 'A-F' 'a-f' | cut -d: -f2
}

#---
## @Synopsis Get's gurus info and stuff and puts it into
## @Synopsis $QUILL_QUILLRC or reads it from there
#---

function quill_rc() {
  local saved
  if [[ -f ${QUILL_OLD_QUILLRC} ]]
  then
    query_msg "With accordance to Source Mage standards moving"
    query_msg "$QUILL_OLD_QUILLRC to $QUILL_QUILLRC"
    mkdir -p ~/.sourcemage/quill
    cp ${QUILL_OLD_QUILLRC} ${QUILL_QUILLRC}
    if [[ -f ${QUILL_QUILLRC} ]]
    then
      query_msg "Removing $QUILL_OLD_QUILLRC"
      rm ${QUILL_OLD_QUILLRC}
    else
      error_msg "Ugghhh... something went wrong..."
    fi
  fi
  if [[ ! -f ${QUILL_QUILLRC} ]] ||
     [[ $QUILL_MODE == reconfigure ]]
  then
    mkdir -p $QUILL_HOME_DIR
    touch $QUILL_QUILLRC
    . $QUILL_QUILLRC # get the contents if there are any (for defaults)
    message "${MESSAGE_COLOR}This will (re)create ${QUILL_QUILLRC} for you${DEFAULT_COLOR}"
    query_string GURU_NAME "${QUERY_COLOR}Please enter your name for the HISTORY entries.${DEFAULT_COLOR}" "$GURU_NAME"
    query_string GURU_EMAIL "${QUERY_COLOR}Please enter your email for the HISTORY entries.${DEFAULT_COLOR}" "$GURU_EMAIL"
    query_string QUILL_SPELL_DIR "${QUERY_COLOR}Where do you want to store generated spells (absolute path)?${DEFAULT_COLOR}" "$QUILL_SPELL_DIR"
    query_string QUILL_GIT_DIR "${QUERY_COLOR}Where is the dir that contains your git grimoires if you have any (absolute path)?${DEFAULT_COLOR}" "$QUILL_GIT_DIR"

    if [[ -z $QUILL_SUDO ]]; then
      saved=n
    else
      [[ -z ${QUILL_SUDO/sudo bash/} ]] && saved=y || saved=n
    fi
    if query "Do you want to use sudo where possible?" $saved; then
      # we need the bash since we call multiple commands at a time
      # and sudo doesn't like just sudo -c "ls; ls; ls"
      QUILL_SUDO="sudo bash"
    else
      QUILL_SUDO="su"
    fi

    [[ -z $GURU_GPGKEY ]] && saved=n || saved=y
    if query "Do you use guru GPG signatures?" $saved ; then
      query_list "${QUERY_COLOR}Please select one of the following keys as the guru signing key${DEFAULT_COLOR}" GURU_GPGKEY "$GURU_GPGKEY" $(gpg -K | sed -n "/^sec[^#]/ s,^sec\s*[^/]*/\(\S*\)\s.*$,\1,p")
    fi

    message "Thank you. Now generating ${QUILL_QUILLRC}"
    cat << QUA > $QUILL_QUILLRC
  QUILL_CONFIG_VERSION="$QUILL_OUR_CONFIG_VERSION"
  GURU_NAME="$GURU_NAME"
  GURU_EMAIL="$GURU_EMAIL"
  QUILL_SPELL_DIR="$QUILL_SPELL_DIR"
  QUILL_GIT_DIR="$QUILL_GIT_DIR"
  QUILL_SUDO="$QUILL_SUDO"
  GURU_GPGKEY="$GURU_GPGKEY"
QUA
    mkdir -p "$QUILL_SPELL_DIR" "$QUILL_GIT_DIR"
    exit 0
  else
     . $QUILL_QUILLRC
  fi
}

#---
## @Synopsis The welcome message for quill
function quill_welcome() {
  message "Welcome to SourceMage GNU/Linux quill - a spell creator and updater script."
  message "-----------------------------------------------------------------------------"
  message "This makes an immediately useable spell from some minor data or "
  message "updates an exsisting one.."
  message "-----------------------------------------------------------------------------"
  message "The spell will be put into a grimoire/section you define(if you choose to)"
  message "and a tar.bz2 file will be created in $QUILL_SPELL_DIR."
  message "-----------------------------------------------------------------------------"
  message "All lists should be space delimited(dependencies and optional dependencies)"
  message "-----------------------------------------------------------------------------"
}

#---
## @Synopsis used to edit spell files
#---
function quill_edit() {
  local spell_file type

  message "Now invoking $EDITOR to edit ${1:-spell files}."
  cd ${QUILL_SPELL_DIR}/${SPELL_NAME}
  for spell_file in ${1:-*}
  do
    type=$(file -bi $spell_file)
    if list_find "$type" "text/plain;"
    then
      $EDITOR $spell_file
    fi
  done
  message "All modifications complete."
}

#---
## @Synopsis generate a tarball of the spell
#---
function quill_final_tarball() {
  message "Now creating a bziped2 tarball of the spell files"
  cd ${QUILL_SPELL_DIR}
  tar -jcvf ${SPELL_NAME}.tar.bz2 ${SPELL_NAME}
  if [[ $? != 0 ]]; then
     error_msg "Failed to create spell tarball"
  else
     message "Spell tarball created successfully"
  fi
}

#---
## @Synopsis function to chmod +x all the relevant spell files
#---
function quill_set_executable_bit() {
  for SPELL_FILE in ${QUILL_SPELL_DIR}/${SPELL_NAME}/*
  do
    if [[ "$SPELL_FILE" != "${QUILL_SPELL_DIR}/${SPELL_NAME}/HISTORY" ]]
    then
      chmod +x $SPELL_FILE
    fi
  done
}

#---
## @Synopsis function to put the spell into the grimoire. The first two args
##           toggle interactivity and the third the reindexing of the grimoire
##
## @param internal flag toggling interactivity - grimoire (canonical)
## @param internal flag toggling interactivity - section name
## @param flag toggling scribe reindex, set it to "no" to toggle
#---
function quill_final_put_in_grimoire() {
  local reindex=$3

  if [[ -z $2 ]]; then
    query_list "Into which grimoire do you wish to put the spell:" QUILL_GRIM_NAME \
      "" $(codex_get_all_grimoires | get_basenames)
    echo
    QUILL_GRIM_NAME=$(codex_canonicalize_grimoire_name $QUILL_GRIM_NAME)

    # can't use query_list, as the section count can be bigger than the available index
    message "Available sections in grimoire $QUILL_GRIM_NAME:"
    codex_get_section_names $QUILL_GRIM_NAME | column
    query_string QUILL_SECT_NAME "Into which section do you wish to put the spell: "

    if [[ -e $QUILL_GRIM_NAME/$QUILL_SECT_NAME/$SPELL_NAME ]]; then
      message "${MESSAGE_COLOR}There is an exsisting spell for $SPELL_NAME in $QUILL_GRIM_NAME/$QUILL_SECT_NAME"
      if query "Do you want to overwrite it?" y; then
        reindex=no
      else
        quill_final_put_in_grimoire
        return
      fi
    fi
  else
    QUILL_GRIM_NAME="$1"
    QUILL_SECT_NAME="$2"
  fi
  message "Copying spell into $QUILL_GRIM_NAME/$QUILL_SECT_NAME/$SPELL_NAME ..."

  quill_final_put_in_grimoire_sub(){
    mkdir -p $QUILL_GRIM_NAME/$QUILL_SECT_NAME/$SPELL_NAME || return 1

    # we wipe it first, so we can handle any files that we deleted before
    rm -r "$QUILL_GRIM_NAME/$QUILL_SECT_NAME/$SPELL_NAME" || return 1
    rm -f "$QUILL_SPELL_DIR/$SPELL_NAME/DETAILS.orig"

    cp -pr $QUILL_SPELL_DIR/$SPELL_NAME $QUILL_GRIM_NAME/$QUILL_SECT_NAME/
    if [[ $? != 0 ]]; then
      error_msg "Copying failed!"
      return 1
    else
      echo "Copying succeded."
      if [[ $1 != no ]]; then
        echo
        echo "Running scribe reindex on $QUILL_GRIM_NAME ..."
        scribe reindex $(basename $QUILL_GRIM_NAME)
      fi
    fi
  }

  if [[ -w $QUILL_GRIM_NAME && -w $QUILL_GRIM_NAME/$QUILL_SECT_NAME ]]; then
    quill_final_put_in_grimoire_sub $reindex
    if [[ $? == 1 ]]
    then
      error_msg "Permission problems, trying as root ..."
      export QUILL_GRIM_NAME QUILL_SECT_NAME QUILL_SPELL_DIR SPELL_NAME
      ${QUILL_SUDO:-su} -c "$(declare -f quill_final_put_in_grimoire_sub); \
        quill_final_put_in_grimoire_sub $reindex"
    fi
  else
    export QUILL_GRIM_NAME QUILL_SECT_NAME QUILL_SPELL_DIR SPELL_NAME
    ${QUILL_SUDO:-su} -c "$(declare -f quill_final_put_in_grimoire_sub); \
      quill_final_put_in_grimoire_sub $reindex"
  fi

}

#---
## @Synopsis cleans out $QUILL_TMP_DIR and/or $QUILL_SPELL_DIR
#---
function quill_purge() {
  quill_rc
  message -n "Purging ... "
  if [[ $1 == "tmp" ]]
  then
    [[ -d $QUILL_TMP_DIR ]] && rm -rf $QUILL_TMP_DIR && mkdir $QUILL_TMP_DIR
  elif [[ $1 == "spells" ]]
  then
    [[ -d $QUILL_SPELL_DIR ]] && rm -rf $QUILL_SPELL_DIR && mkdir $QUILL_SPELL_DIR
  else
    [[ -d $QUILL_TMP_DIR ]] && [[ -d $QUILL_SPELL_DIR ]] && rm -rf $QUILL_SPELL_DIR $QUILL_TMP_DIR && mkdir $QUILL_TMP_DIR $QUILL_SPELL_DIR
  fi

  rc=$?
  if [[ $rc == 0 ]]
  then
    message "done."
  else
    error_msg "failed!"
  fi
  exit $rc
}

#---
## @Synopsis checks if spell source urls are valid
## @Synopsis and perhaps changes them if they are trivially fixable
#---
function check_source_urls() {
  local i= su old_su oldest_su source old_source

  message "Checking source urls (this may take a while) ..."
  for su in $source_urls
  do
    check_source_url "$su" "$i"
    if [[ $? == 0 ]]
    then
      message "SOURCE${i}_URL[0] is ok!"
    else
      # first retry with a changed suffix
      old_su="$su"
      [[ ${su/.gz/.bz2} == $su ]] && su="${su/.bz2/.gz}" || su="${su/.gz/.bz2}"
      if check_source_url "$su" "$i"
      then
        message "SOURCE${i}_URL[0] is ok after changing the file extension!"
        # tricky tricky - if we only change the url, it is likely
        # that the accompanying SOURCE will be bad. So we need to change
        # SOURCEn too. Or just that, if the url contains it as a variable

        # try to unexpanded the url - maybe changing the source is enough
        old_source=$(sed -n "s, $old_su,,p" <<< "$sources_and_urls")
        source="$old_source"
        if [[ ${source/.gz/.bz2} == $source ]]
        then
          source="${source/.bz2/.gz}"
        else
          source="${source/.gz/.bz2}"
        fi

        # we need another one since $old_source would match only $old_su
        # and we also need the substituted $old_su
        oldest_su="$old_su"
        substitute_with_variables old_su "$old_source" {SOURCE$i}
        if grep -Eq "\.(bz2|gz)$"  <<< "$old_su"
        then
          # the url most likely does not use SOURCE then
          # however if it does, lets put the substitutions in anyway
          # so we change the url in the file; reparsing is the next call
          # also check if it contains the old expanded VERSION ($version)

          # substitute the longer string first, more likely to give correct results
          # think 1.2 and 1.2.1
          if (( ${#SPELL_VERSION} > ${#version} ))
          then
            substitute_with_variables su "$old_source" {SOURCE$i} "$SPELL_NAME" {SPELL} "$SPELL_VERSION" {VERSION} "$version" {VERSION}
          else
            substitute_with_variables su "$old_source" {SOURCE$i} "$SPELL_NAME" {SPELL} "$version" {VERSION} "$SPELL_VERSION" {VERSION}
          fi

          # some urls may contain other expanded vars that we are not aware of
          if grep -q "$oldest_su" DETAILS
          then # all is fine
            sed -i "s,$oldest_su,$su," DETAILS
          else
            error_msg "Couldn't find $oldest_su in DETAILS,"
            error_msg "probably due to it containing nonstandard variables"
            message "Replace it manually with $su"
          fi
          add_history_entry "DETAILS: Changed SOURCE${i}_URL[0] extension"
        else
          substitute_with_variables source "$SPELL_NAME" {SPELL} "$SPELL_VERSION" {VERSION}
          sed -i "s,$old_source,$source," DETAILS
          # we don't know if the SOURCE is expanded or not, trying just both extremes
          substitute_with_variables old_source "$SPELL_NAME" {SPELL} "$SPELL_VERSION" {VERSION}
          sed -i "s,$old_source,$source," DETAILS
          # and with the beautiful syntax last
          old_source="$(tr -d "{}" <<< "$old_source")"
          sed -i "s,$old_source,$source," DETAILS
          add_history_entry "DETAILS: Changed SOURCE${i} extension"
        fi

      else
        # if they are still not ok ask for fixed ones
        error_msg  "SOURCE${i}_URL[0] is hopelessly broken! Fix it manually."
        sleep 2
        quill_edit DETAILS
      fi
    fi
    [[ ! $i ]] && i=1
    let i+=1
  done

}

#---
## @Synopsis checks if passed source url is valid
##
## @param source url
## @param current source iterator
##
## @return 0 if source url either is valid or just not trivially checkable
## @return 1 otherwise (http or ftp source url failure)
#---
function check_source_url() {
  local rc su="$1" i="$2"

  if grep -q ftp:// <<< "$su"
  then
    wget -O - -S "${su%/*}/" 2>&1 | grep -q "${su##*/}"
    rc=$?
  elif grep -q http:// <<< "$su"
  then
    # the return value acrobatics make both blocks return the same
    wget -S --spider "$su" 2>&1 | grep -Eq "ERROR 404|service not known"
    if [[ $? == 0 ]]
    then
      rc=1
    else
      rc=0
    fi
  else
    message "SOURCE${i}_URL[0] is not a http or ftp link, assuming it works."
    rc=0
  fi

  return $rc
}

#---
## @Synopsis dumps the default spell file function, taking into
## account that devel has a new spell file inheritance scheme
#---
function dump_default_function() {
  if ! declare -f real_default_sorcery_$1; then
    # old sorcery
    declare -f real_default_$1
  fi | sed -e '1,3 d' -e '$ d' -e 's,    ,,'
}

#---
## @Synopsis function that displays the version and exits
#---
function quill_version() {

  message "quill - $QUILL_VERSION
Copyright (C) 2006-2007 Source Mage
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Originally written by:
Andraž 'ruskie' Levstik
Rewritten by:
Andraž 'ruskie' Levstik
Jaka 'lynxlynxlynx' Kranjc
Juuso 'iuso' Alasuutari

Contributions by:
Andrew 'afrayedknot' Stitt
Arjan 'abouter' Bouter
"
  exit 0
}

#---
## @Synopsis checks if the parameter is missing
## @Synopsis if not, saves it in QUILL_TARGET
#---
function check_parameter() {
  [[ -z $1 ]] &&
  error_msg "Missing parameter" &&
  quill_help 101 ||
  QUILL_TARGET=$(tr '[[:upper:]]' '[[:lower:]]' <<< "$1")
}

#---
## @Synopsis verbosely checks if the argument is a dir and optionally exits
##
## @param path
## @param (optional) be fatal
##
## @return 0 if it is a dir
## @return 1 otherwise
#---
function dir_check() {
  if [[ ! -d $1 ]]
  then
    error_msg "Not a directory: $1!"
    if [[ -z $2 ]]
    then
      return 1
    else
      exit 17
    fi
  fi
  return 0
}

#---
## @Synopsis adds && to all full lines not ending by and escape \ or last line
#---
function andand_lines() {
  local file="$1"
  sed -e 's/^ *$//' -e 's/[^\\]$/& \&\&/' "$file" |
    tac |
    awk '{ if (removed!=1){ if (sub("&&$","") > 0){ removed=1 }}; print }' |
    tac > "temporary-$file"
  mv "temporary-$file" "$file"
}


#---
## @Synopsis cleans out various special chars from html
#---
function clear_html_specials(){
  local file="$1"
  sed -i \
      -e "s:&\(nbsp;\|#160;\): :g" \
      -e "s:&\(iexcl;\|#161;\):¡:g" \
      -e "s:&\(cent;\|#162;\):¢:g" \
      -e "s:&\(pound;\|#163;\):£:g" \
      -e "s:&\(curren;\|#164;\):¤:g" \
      -e "s:&\(yen;\|#165;\):¥:g" \
      -e "s:&\(brvbar;\|#166;\):¦:g" \
      -e "s:&\(sect;\|#167;\):§:g" \
      -e "s:&\(uml;\|#168;\):¨:g" \
      -e "s:&\(copy;\|#169;\):©:g" \
      -e "s:&\(ordf;\|#170;\):ª:g" \
      -e "s:&\(laquo;\|#171;\):«:g" \
      -e "s:&\(not;\|#172;\):¬:g" \
      -e "s:&\(shy;\|#173;\):­:g" \
      -e "s:&\(reg;\|#174;\):®:g" \
      -e "s:&\(macr;\|#175;\):¯:g" \
      -e "s:&\(deg;\|#176;\):°:g" \
      -e "s:&\(plusmn;\|#177;\):±:g" \
      -e "s:&\(sup2;\|#178;\):²:g" \
      -e "s:&\(sup3;\|#179;\):³:g" \
      -e "s:&\(acute;\|#180;\):´:g" \
      -e "s:&\(micro;\|#181;\):µ:g" \
      -e "s:&\(para;\|#182;\):¶:g" \
      -e "s:&\(middot;\|#183;\):·:g" \
      -e "s:&\(cedil;\|#184;\):¸:g" \
      -e "s:&\(sup1;\|#185;\):¹:g" \
      -e "s:&\(ordm;\|#186;\):º:g" \
      -e "s:&\(raquo;\|#187;\):»:g" \
      -e "s:&\(frac14;\|#188;\):¼:g" \
      -e "s:&\(frac12;\|#189;\):½:g" \
      -e "s:&\(frac34;\|#190;\):¾:g" \
      -e "s:&\(iquest;\|#191;\):¿:g" \
      -e "s:&\(Agrave;\|#192;\):À:g" \
      -e "s:&\(Aacute;\|#193;\):Á:g" \
      -e "s:&\(Acirc;\|#194;\):Â:g" \
      -e "s:&\(Atilde;\|#195;\):Ã:g" \
      -e "s:&\(Auml;\|#196;\):Ä:g" \
      -e "s:&\(Aring;\|#197;\):Å:g" \
      -e "s:&\(AElig;\|#198;\):Æ:g" \
      -e "s:&\(Ccedil;\|#199;\):Ç:g" \
      -e "s:&\(Egrave;\|#200;\):È:g" \
      -e "s:&\(Eacute;\|#201;\):É:g" \
      -e "s:&\(Ecirc;\|#202;\):Ê:g" \
      -e "s:&\(Euml;\|#203;\):Ë:g" \
      -e "s:&\(Igrave;\|#204;\):Ì:g" \
      -e "s:&\(Iacute;\|#205;\):Í:g" \
      -e "s:&\(Icirc;\|#206;\):Î:g" \
      -e "s:&\(Iuml;\|#207;\):Ï:g" \
      -e "s:&\(ETH;\|#208;\):Ð:g" \
      -e "s:&\(Ntilde;\|#209;\):Ñ:g" \
      -e "s:&\(Ograve;\|#210;\):Ò:g" \
      -e "s:&\(Oacute;\|#211;\):Ó:g" \
      -e "s:&\(Ocirc;\|#212;\):Ô:g" \
      -e "s:&\(Otilde;\|#213;\):Õ:g" \
      -e "s:&\(Ouml;\|#214;\):Ö:g" \
      -e "s:&\(times;\|#215;\):×:g" \
      -e "s:&\(Oslash;\|#216;\):Ø:g" \
      -e "s:&\(;\|#217;\):Ù:g" \
      -e "s:&\(;\|#218;\):Ú:g" \
      -e "s:&\(\|#219;\):Û:g" \
      -e "s:&\(|#220;\):Ü:g" \
      -e "s:&\(Yacute;\|#221;\):Ý:g" \
      -e "s:&\(THORN;\|#222;\):Þ:g" \
      -e "s:&\(szlig;\|#223;\):ß:g" \
      -e "s:&\(agrave;\|#224;\):à:g" \
      -e "s:&\(aacute;\|#225;\):á:g" \
      -e "s:&\(acirc;\|#226;\):â:g" \
      -e "s:&\(atilde;\|#227;\):ã:g" \
      -e "s:&\(auml;\|#228;\):ä:g" \
      -e "s:&\(aring;\|#229;\):å:g" \
      -e "s:&\(aelig;\|#230;\):æ:g" \
      -e "s:&\(ccedil;\|#231;\):ç:g" \
      -e "s:&\(egrave;\|#232;\):è:g" \
      -e "s:&\(eacute;\|#233;\):é:g" \
      -e "s:&\(ecirc;\|#234;\):ê:g" \
      -e "s:&\(euml;\|#235;\):ë:g" \
      -e "s:&\(igrave;\|#236;\):ì:g" \
      -e "s:&\(iacute;\|#237;\):í:g" \
      -e "s:&\(icirc;\|#238;\):î:g" \
      -e "s:&\(iuml;\|#239;\):ï:g" \
      -e "s:&\(eth;\|#240;\):ð:g" \
      -e "s:&\(ntilde;\|#241;\):ñ:g" \
      -e "s:&\(ograve;\|#242;\):ò:g" \
      -e "s:&\(oacute;\|#243;\):ó:g" \
      -e "s:&\(ocirc;\|#244;\):ô:g" \
      -e "s:&\(otilde;\|#245;\):õ:g" \
      -e "s:&\(ouml;\|#246;\):ö:g" \
      -e "s:&\(divide;\|#247;\):÷:g" \
      -e "s:&\(oslash;\|#248;\):ø:g" \
      -e "s:&\(ugrave;\|#249;\):ù:g" \
      -e "s:&\(uacute;\|#250;\):ú:g" \
      -e "s:&\(ucirc;\|#251;\):û:g" \
      -e "s:&\(uuml;\|#252;\):ü:g" \
      -e "s:&\(yacute;\|#253;\):ý:g" \
      -e "s:&\(thorn;\|#254;\):þ:g" \
      -e "s:&\(yuml;\|#255;\):ÿ:g" \
      -e "s:&\(fnof;\|#402;\):ƒ:g" \
      -e "s:&\(Alpha;\|#913;\):Α:g" \
      -e "s:&\(Beta;\|#914;\):Β:g" \
      -e "s:&\(Gamma;\|#915;\):Γ:g" \
      -e "s:&\(Delta;\|#916;\):Δ:g" \
      -e "s:&\(Epsilon;\|#917;\):Ε:g" \
      -e "s:&\(Zeta;\|#918;\):Ζ:g" \
      -e "s:&\(Eta;\|#919;\):Η:g" \
      -e "s:&\(Theta;\|#920;\):Θ:g" \
      -e "s:&\(Iota;\|#921;\):Ι:g" \
      -e "s:&\(Kappa;\|#922;\):Κ:g" \
      -e "s:&\(Lambda;\|#923;\):Λ:g" \
      -e "s:&\(Mu;\|#924;\):Μ:g" \
      -e "s:&\(Nu;\|#925;\):Ν:g" \
      -e "s:&\(Xi;\|#926;\):Ξ:g" \
      -e "s:&\(Omicron;\|#927;\):Ο:g" \
      -e "s:&\(Pi;\|#928;\):Π:g" \
      -e "s:&\(Rho;\|#929;\):Ρ:g" \
      -e "s:&\(Sigma;\|#931;\):Σ:g" \
      -e "s:&\(Tau;\|#932;\):Τ:g" \
      -e "s:&\(n;\|#933;\):Υ:g" \
      -e "s:&\(Phi;\|#934;\):Φ:g" \
      -e "s:&\(Chi;\|#935;\):Χ:g" \
      -e "s:&\(Psi;\|#936;\):Ψ:g" \
      -e "s:&\(Omega;\|#937;\):Ω:g" \
      -e "s:&\(alpha;\|#945;\):α:g" \
      -e "s:&\(beta;\|#946;\):β:g" \
      -e "s:&\(gamma;\|#947;\):γ:g" \
      -e "s:&\(delta;\|#948;\):δ:g" \
      -e "s:&\(epsilon;\|#949;\):ε:g" \
      -e "s:&\(zeta;\|#950;\):ζ:g" \
      -e "s:&\(eta;\|#951;\):η:g" \
      -e "s:&\(theta;\|#952;\):θ:g" \
      -e "s:&\(iota;\|#953;\):ι:g" \
      -e "s:&\(kappa;\|#954;\):κ:g" \
      -e "s:&\(lambda;\|#955;\):λ:g" \
      -e "s:&\(mu;\|#956;\):μ:g" \
      -e "s:&\(nu;\|#957;\):ν:g" \
      -e "s:&\(xi;\|#958;\):ξ:g" \
      -e "s:&\(omicron;\|#959;\):ο:g" \
      -e "s:&\(pi;\|#960;\):π:g" \
      -e "s:&\(rho;\|#961;\):ρ:g" \
      -e "s:&\(sigmaf;\|#962;\):ς:g" \
      -e "s:&\(sigma;\|#963;\):σ:g" \
      -e "s:&\(tau;\|#964;\):τ:g" \
      -e "s:&\(upsilon;\|#965;\):υ:g" \
      -e "s:&\(phi;\|#966;\):φ:g" \
      -e "s:&\(chi;\|#967;\):χ:g" \
      -e "s:&\(psi;\|#968;\):ψ:g" \
      -e "s:&\(omega;\|#969;\):ω:g" \
      -e "s:&\(thetasym;\|#977;\):ϑ:g" \
      -e "s:&\(upsih;\|#978;\):ϒ:g" \
      -e "s:&\(piv;\|#982;\):ϖ:g" \
      -e "s:&\(bull;\|#8226;\):•:g" \
      -e "s:&\(hellip;\|#8230;\):…:g" \
      -e "s:&\(prime;\|#8242;\):′:g" \
      -e "s:&\(Prime;\|#8243;\):″:g" \
      -e "s:&\(oline;\|#8254;\):‾:g" \
      -e "s:&\(frasl;\|#8260;\):⁄:g" \
      -e "s:&\(weierp;\|#8472;\):℘:g" \
      -e "s:&\(image;\|#8465;\):ℑ:g" \
      -e "s:&\(real;\|#8476;\):ℜ:g" \
      -e "s:&\(trade;\|#8482;\):™:g" \
      -e "s:&\(alefsym;\|#8501;\):ℵ:g" \
      -e "s:&\(larr;\|#8592;\):←:g" \
      -e "s:&\(uarr;\|#8593;\):↑:g" \
      -e "s:&\(rarr;\|#8594;\):→:g" \
      -e "s:&\(darr;\|#8595;\):↓:g" \
      -e "s:&\(harr;\|#8596;\):↔:g" \
      -e "s:&\(crarr;\|#8629;\):↵:g" \
      -e "s:&\(lArr;\|#8656;\):⇐:g" \
      -e "s:&\(uArr;\|#8657;\):⇑:g" \
      -e "s:&\(rArr;\|#8658;\):⇒:g" \
      -e "s:&\(dArr;\|#8659;\):⇓:g" \
      -e "s:&\(hArr;\|#8660;\):⇔:g" \
      -e "s:&\(forall;\|#8704;\):∀:g" \
      -e "s:&\(part;\|#8706;\):∂:g" \
      -e "s:&\(exist;\|#8707;\):∃:g" \
      -e "s:&\(empty;\|#8709;\):∅:g" \
      -e "s:&\(nabla;\|#8711;\):∇:g" \
      -e "s:&\(isin;\|#8712;\):∈:g" \
      -e "s:&\(notin;\|#8713;\):∉:g" \
      -e "s:&\(ni;\|#8715;\):∋:g" \
      -e "s:&\(prod;\|#8719;\):∏:g" \
      -e "s:&\(sum;\|#8721;\):∑:g" \
      -e "s:&\(minus;\|#8722;\):−:g" \
      -e "s:&\(lowast;\|#8727;\):∗:g" \
      -e "s:&\(radic;\|#8730;\):√:g" \
      -e "s:&\(prop;\|#8733;\):∝:g" \
      -e "s:&\(infin;\|#8734;\):∞:g" \
      -e "s:&\(ang;\|#8736;\):∠:g" \
      -e "s:&\(and;\|#8743;\):∧:g" \
      -e "s:&\(or;\|#8744;\):∨:g" \
      -e "s:&\(cap;\|#8745;\):∩:g" \
      -e "s:&\(cup;\|#8746;\):∪:g" \
      -e "s:&\(int;\|#8747;\):∫:g" \
      -e "s:&\(there4;\|#8756;\):∴:g" \
      -e "s:&\(sim;\|#8764;\):∼:g" \
      -e "s:&\(cong;\|#8773;\):≅:g" \
      -e "s:&\(asymp;\|#8776;\):≈:g" \
      -e "s:&\(ne;\|#8800;\):≠:g" \
      -e "s:&\(equiv;\|#8801;\):≡:g" \
      -e "s:&\(le;\|#8804;\):≤:g" \
      -e "s:&\(ge;\|#8805;\):≥:g" \
      -e "s:&\(sub;\|#8834;\):⊂:g" \
      -e "s:&\(sup;\|#8835;\):⊃:g" \
      -e "s:&\(nsub;\|#8836;\):⊄:g" \
      -e "s:&\(sube;\|#8838;\):⊆:g" \
      -e "s:&\(supe;\|#8839;\):⊇:g" \
      -e "s:&\(oplus;\|#8853;\):⊕:g" \
      -e "s:&\(otimes;\|#8855;\):⊗:g" \
      -e "s:&\(perp;\|#8869;\):⊥:g" \
      -e "s:&\(sdot;\|#8901;\):⋅:g" \
      -e "s:&\(lceil;\|#8968;\):⌈:g" \
      -e "s:&\(rceil;\|#8969;\):⌉:g" \
      -e "s:&\(lfloor;\|#8970;\):⌊:g" \
      -e "s:&\(rfloor;\|#8971;\):⌋:g" \
      -e "s:&\(lang;\|#9001;\):〈:g" \
      -e "s:&\(rang;\|#9002;\):〉:g" \
      -e "s:&\(loz;\|#9674;\):◊:g" \
      -e "s:&\(spades;\|#9824;\):♠:g" \
      -e "s:&\(clubs;\|#9827;\):♣:g" \
      -e "s:&\(hearts;\|#9829;\):♥:g" \
      -e "s:&\(diams;\|#9830;\):♦:g" \
      -e "s:&\(quot;\|#34;\):\":g" \
      -e "s:&\(amp;\|#38;\):&:g" \
      -e "s:&\(lt;\|#60;\):<:g" \
      -e "s:&\(gt;\|#62;\):>:g" \
      -e "s:&\(OElig;\|#338;\):Œ:g" \
      -e "s:&\(oelig;\|#339;\):œ:g" \
      -e "s:&\(Scaron;\|#352;\):Š:g" \
      -e "s:&\(scaron;\|#353;\):š:g" \
      -e "s:&\(Yuml;\|#376;\):Ÿ:g" \
      -e "s:&\(circ;\|#710;\):ˆ:g" \
      -e "s:&\(tilde;\|#732;\):˜:g" \
      -e "s:&\(ensp;\|#8194;\): :g" \
      -e "s:&\(emsp;\|#8195;\): :g" \
      -e "s:&\(thinsp;\|#8201;\): :g" \
      -e "s:&\(zwnj;\|#8204;\):‌:g" \
      -e "s:&\(zwj;\|#8205;\):‍:g" \
      -e "s:&\(lrm;\|#8206;\):‎:g" \
      -e "s:&\(rlm;\|#8207;\):‏:g" \
      -e "s:&\(ndash;\|#8211;\):–:g" \
      -e "s:&\(mdash;\|#8212;\):—:g" \
      -e "s:&\(lsquo;\|#8216;\):‘:g" \
      -e "s:&\(rsquo;\|#8217;\):’:g" \
      -e "s:&\(sbquo;\|#8218;\):‚:g" \
      -e "s:&\(ldquo;\|#8220;\):“:g" \
      -e "s:&\(rdquo;\|#8221;\):”:g" \
      -e "s:&\(bdquo;\|#8222;\):„:g" \
      -e "s:&\(dagger;\|#8224;\):†:g" \
      -e "s:&\(Dagger;\|#8225;\):‡:g" \
      -e "s:&\(permil;\|#8240;\):‰:g" \
      -e "s:&\(lsaquo;\|#8249;\):‹:g" \
      -e "s:&\(rsaquo;\|#8250;\):›:g" \
      -e "s:&\(euro;\|#8364;\):€:g" \
      $file
}


#---
## @Synopsis prints a colored error message
#---
function error_msg() {
  message "$PROBLEM_COLOR$@$DEFAULT_COLOR"
}

#---
## @Synopsis prints a colored query message
#---
function query_msg() {
  message "$QUERY_COLOR$@$DEFAULT_COLOR"
}

#---
## @Synopsis function that displays help and exits
#---
function quill_help() {

  message "quill $QUILL_VERSION
Copyright (C) 2006-2007 Source Mage
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

USAGE: quill [OPTIONS]
A spell creator and updater.

OPTIONS:
  --fmxml, -f <SPELL>		get spell data from Freshmeat if possible
  --perlcpan, -c <SPELL>	get spell data from Perl-CPAN if possible
  --rubyraa, -y <SPELL>		get spell data from Ruby Application Archive if possible
  --update, -u <SPELL>		update exsisting spell
  --apprentice, -a		apprentice mode	(default)
  --mage, -m			mage mode (advanced)
  --wizard, -w			wizard mode (expert)(DOES NOTHING FOR NOW)
  --help, -h			display this help
  --version, -v			display version
  --reconfigure, -r		reconfigure settings
  --purge, -p [spells|tmp]	purge internal quill files, defaults to both dirs

EXAMPLES:
  Create a spell; try to get some information from Freshmeat and ask about some
  additional spell files:
    quill -f wormux -m

  Update a spell; try to get some information from Perl-CPAN:
    quill -c wormux -u wormux

  The same can be done with shorter forms (fu, uc, yu and inverses are supported):
    quill -cu wormux
"
  exit ${1:-0}
}


#---
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#---

